/*
 * GuncelDoviz Web API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.io.Serializable;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * Doviz
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-04T18:06:05.678Z[GMT]")
public class Doviz implements Parcelable , Serializable {
  private static final long serialVersionUID = 1L;
  @SerializedName("code")
  private String code = null;

  @SerializedName("unit")
  private String unit = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("arrow")
  private String arrow = null;

  @SerializedName("buying")
  private String buying = null;

  @SerializedName("selling")
  private String selling = null;

  @SerializedName("percentage")
  private String percentage = null;

  @SerializedName("updateDate")
  private String updateDate = null;

  @SerializedName("detailLink")
  private String detailLink = null;

  @SerializedName("imageLink")
  private String imageLink = null;

  public Doviz() {
  }
  public Doviz code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Doviz unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @Schema(description = "")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public Doviz name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Doviz arrow(String arrow) {
    this.arrow = arrow;
    return this;
  }

   /**
   * Get arrow
   * @return arrow
  **/
  @Schema(description = "")
  public String getArrow() {
    return arrow;
  }

  public void setArrow(String arrow) {
    this.arrow = arrow;
  }

  public Doviz buying(String buying) {
    this.buying = buying;
    return this;
  }

   /**
   * Get buying
   * @return buying
  **/
  @Schema(description = "")
  public String getBuying() {
    return buying;
  }

  public void setBuying(String buying) {
    this.buying = buying;
  }

  public Doviz selling(String selling) {
    this.selling = selling;
    return this;
  }

   /**
   * Get selling
   * @return selling
  **/
  @Schema(description = "")
  public String getSelling() {
    return selling;
  }

  public void setSelling(String selling) {
    this.selling = selling;
  }

  public Doviz percentage(String percentage) {
    this.percentage = percentage;
    return this;
  }

   /**
   * Get percentage
   * @return percentage
  **/
  @Schema(description = "")
  public String getPercentage() {
    return percentage;
  }

  public void setPercentage(String percentage) {
    this.percentage = percentage;
  }

  public Doviz updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @Schema(description = "")
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }

  public Doviz detailLink(String detailLink) {
    this.detailLink = detailLink;
    return this;
  }

   /**
   * Get detailLink
   * @return detailLink
  **/
  @Schema(description = "")
  public String getDetailLink() {
    return detailLink;
  }

  public void setDetailLink(String detailLink) {
    this.detailLink = detailLink;
  }

  public Doviz imageLink(String imageLink) {
    this.imageLink = imageLink;
    return this;
  }

   /**
   * Get imageLink
   * @return imageLink
  **/
  @Schema(description = "")
  public String getImageLink() {
    return imageLink;
  }

  public void setImageLink(String imageLink) {
    this.imageLink = imageLink;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Doviz doviz = (Doviz) o;
    return Objects.equals(this.code, doviz.code) &&
        Objects.equals(this.unit, doviz.unit) &&
        Objects.equals(this.name, doviz.name) &&
        Objects.equals(this.arrow, doviz.arrow) &&
        Objects.equals(this.buying, doviz.buying) &&
        Objects.equals(this.selling, doviz.selling) &&
        Objects.equals(this.percentage, doviz.percentage) &&
        Objects.equals(this.updateDate, doviz.updateDate) &&
        Objects.equals(this.detailLink, doviz.detailLink) &&
        Objects.equals(this.imageLink, doviz.imageLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, unit, name, arrow, buying, selling, percentage, updateDate, detailLink, imageLink);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Doviz {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    arrow: ").append(toIndentedString(arrow)).append("\n");
    sb.append("    buying: ").append(toIndentedString(buying)).append("\n");
    sb.append("    selling: ").append(toIndentedString(selling)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    detailLink: ").append(toIndentedString(detailLink)).append("\n");
    sb.append("    imageLink: ").append(toIndentedString(imageLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(code);
    out.writeValue(unit);
    out.writeValue(name);
    out.writeValue(arrow);
    out.writeValue(buying);
    out.writeValue(selling);
    out.writeValue(percentage);
    out.writeValue(updateDate);
    out.writeValue(detailLink);
    out.writeValue(imageLink);
  }

  Doviz(Parcel in) {
    code = (String)in.readValue(null);
    unit = (String)in.readValue(null);
    name = (String)in.readValue(null);
    arrow = (String)in.readValue(null);
    buying = (String)in.readValue(null);
    selling = (String)in.readValue(null);
    percentage = (String)in.readValue(null);
    updateDate = (String)in.readValue(null);
    detailLink = (String)in.readValue(null);
    imageLink = (String)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<Doviz> CREATOR = new Parcelable.Creator<Doviz>() {
    public Doviz createFromParcel(Parcel in) {
      return new Doviz(in);
    }
    public Doviz[] newArray(int size) {
      return new Doviz[size];
    }
  };
}
